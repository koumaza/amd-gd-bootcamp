name: Release
on:
  push:
    branches:
      - '*'
    tags:
      - '**'
  pull_request:
    branches: [ master ]

jobs:
  Tag:
    runs-on: ubuntu-20.04
    steps:
      - name: CheckOut
        uses: actions/checkout@main
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        id: BumpTag
        uses: anothrNick/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

  Build:
    needs: [Tag]
    container: archlinux
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        edition: [Red,Blue]
    steps:
    - name: SetUp Environment
      run: |
        pacman -Syyuuv --noconfirm --needed --debug --color always \
        base base-devel p7zip aria2 git fish jq \
        1>.tmp.fish-out.log | tee .tmp.fish-error.log
    - name: CheckOut
      uses: actions/checkout@main
      with:
        fetch-depth: '0'
    - name: Build
      env:
        edition: ${{ matrix.edition }}
      run: |
        : Detect Edition
        if test $edition = Red ; then
          export radeon_edition=1
        elif test $edition = Blue ; then
          export radeon_edition=1
        else
          echo Exception 1>&2
          exit 1
        fi
        
        : Download Driver
        export PROJROOT=$PWD
        url=$(cat DriverPATH.url)
        mkdir -p Driver/ Driver/Extracted Driver/Downloaded
        aria2c -x16 -s30 -m0 -ctrue -d Driver/Downloaded $url
        driverpkg=$(ls Driver/Downloaded)
        
        : Extract Driver        
        driverdir=Driver/Extracted
        7z x -o$driverdir Driver/Downloaded/$driverpkg
        
        : Modify Downloaded Driver        
        c_inf=$(ls $driverdir/Packages/Drivers/Display/WT6A_INF/C*.inf)
        u_inf=$(ls $driverdir/Packages/Drivers/Display/WT6A_INF/U*.inf)
        jq '.BuildInfo |= .+ {EnableFalcon : "true"}' < $driverdir/Config/InstallManifest.json > $driverdir/Config/InstallManifest.json.tmp && mv $driverdir/Config/InstallManifest.json.tmp $driverdir/Config/InstallManifest.json
        grep ExcludeID $c_inf |sed -E 's/ExcludeID/;ExcludeID/g' > $c_inf.tmp && mv $c_inf.tmp $c_inf
        grep ExcludeID $u_inf |sed -E 's/ExcludeID/;ExcludeID/g' > $u_inf.tmp && mv $u_inf.tmp $u_inf
        sed -i -E "s/\[ati2mtag_SoftwareDeviceSettings\]/[ati2mtag_SoftwareDeviceSettings\]\nHKR,,DisableWorkstation,%REG_DWORD%,$radeon_edition/" $c_inf
        sed -i -E "s/\[ati2mtag_SoftwareDeviceSettings\]/[ati2mtag_SoftwareDeviceSettings\]\nHKR,,DisableWorkstation,%REG_DWORD%,$radeon_edition/" $u_inf
        
        : Create Package
        cd $driverdir/
        export ZSTD_CLEVEL=15 && tar -acvf ../../RadeonSoftwareForBootcamp-$edition.tar.zst Bin64/ Config/ Packages/ Setup.exe

    - name: Upload a Build Artifact (${{ matrix.edition }})
      uses: actions/upload-artifact@main
      with:
        name: Builded
        path: RadeonSoftwareForBootcamp-${{ matrix.edition }}.tar.zst
        
  Release:
    needs: [Build]
    runs-on: ubuntu-20.04
    steps:
    - name: CheckOut
      uses: actions/checkout@main
      with:
        fetch-depth: '0'
    - name: Download a Build Artifact
      uses: actions/download-artifact@main
      with:
        name: Builded
    - name: Create a Release
      id: create_release
      uses: actions/create-release@main
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.BumpTag.outputs.new_tag }}
        release_name: Release ${{ steps.BumpTag.outputs.new_tag }}
        body: ${{ steps.BumpTag.outputs.new_tag }} release.
        draft: false
        prerelease: false
    - name: Upload Release Asset Red
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RadeonSoftwareForBootcamp-Red.tar.zst
        asset_name: RadeonSoftwareForBootcamp-Red.tar.zst
        asset_content_type: application/zstd
    - name: Upload Release Asset Blue
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RadeonSoftwareForBootcamp-Blue.tar.zst
        asset_name: RadeonSoftwareForBootcamp-Blue.tar.zst
        asset_content_type: application/zstd
